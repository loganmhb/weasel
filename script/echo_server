#!/usr/bin/env boot

(require '[clojure.java.io :as io]
         '[boot.cli :refer [defclifn]])

(defn receive [socket]
  (println "Waiting for message.")
  (let [msg (.readLine (io/reader socket))]
    (println "Read:" msg)
    msg))

(defn send-line [socket msg]
  (println "Writing:" msg)
  (doto (io/writer socket)
    (.write msg)
    (.flush)))

(defn handle-connection [server-sock]
  (with-open [sock (.accept server-sock)]
    (loop [line (receive sock)]
      (when line
        (send-line sock line)
        (recur (receive sock))))))

(defclifn -main
  [p port VAL int "Port to echo on"]
  (println "Listening on port " port)
  (with-open [server-sock (java.net.ServerSocket. port)]
    (while true
      (handle-connection server-sock))))
