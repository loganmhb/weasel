#!/usr/bin/env boot

(require '[clojure.java.io :as io]
         '[boot.cli :refer [defclifn]])

(defn handle-connection [server-sock]
  (with-open [sock (.accept server-sock)
              in (.getInputStream sock)
              out (.getOutputStream sock)]
    (loop [b (.read in)]
      (when (> b -1) ; sentinel value for end of stream
        (.write out b)
        (recur (.read in))))))

(defclifn -main
  [p port VAL int "Port to echo on"]
  (println "Listening on port " port)
  (with-open [server-sock (java.net.ServerSocket. port)]
    (while true
      (handle-connection server-sock))))
